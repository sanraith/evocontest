@using evocontest.WebApp.Data

@{
    ViewData["Title"] = "Feltöltés";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var user = (ApplicationUser)ViewBag.User;
}
@section Head
{
    <link rel="stylesheet" href="~/css/step-progress.css" />
    <script src="~/js/file-upload-progress.js"></script>
    <script src="~/lib/signalr/signalr.js"></script>
}

<h1>Feltöltés</h1>

<br />
<div class="container-fluid">
    <ul class="list-unstyled multi-steps">
        <li id="progressItem-0" class="is-active" style="display: none"></li>
        <li id="progressItem-1">Feltöltés</li>
        <li id="progressItem-2">Fájl vizsgálat</li>
        <li id="progressItem-3">Unit tesztek</li>
        <li id="progressItem-4">Jelentkezés elfogadva</li>
    </ul>
</div>
<div id="submitContent">Pillanat... <span class="spinner-border spinner-border-sm" role="status"></span></div>
<div>A következő rangsorolásig hátralévő idő: <span id="countdown"></span></div>

@*<div class="alert-danger">
        <h2>Erősítsd meg az email címedet!</h2>
        A nevezéshez meg kell erősítened az email címedet. A megerősítéshez kattints az emailben kapott megerősítő kódra.
        Ha nem érkezett volna meg, akkor

        <form class="form-inline" asp-area="Identity" asp-page="/Account/SendVerificationEmail">
            <button type="submit" class="nav-link btn btn-link text-dark">itt kérhetsz újat</button>
        </form>
    </div>*@

<h2 style="margin-top: 3em">SDK</h2>
<div style="width: 25em; margin-left:1em; float:right">
    <h5 style="text-align: center">Letöltés</h5>
    <a class="btn btn-block btn-outline-primary" href="git-client://clone?repo=https%3A%2F%2Fgithub.com%2Fsanraith%2Fevocontest-sdk">Megnyitás Visual Studio-ban</a>
    <a class="btn btn-block btn-outline-secondary" href="https://github.com/sanraith/evocontest-sdk">Megnyitás GitHub-on</a>
    <a class="btn btn-block btn-outline-secondary" href="https://github.com/sanraith/evocontest-sdk/archive/master.zip">Letöltés ZIP-ként</a>
</div>
<p>
    A jelentkezéshez le kell töltened a verseny SDK-ját. Az SDK tartalmazza a megoldás
    <ul>
        <li>elkészítéséhez <code>(evocontest.Submission)</code></li>
        <li>tanulmányozásához <code>(evocontest.Submission.Sample)</code></li>
        <li>kipróbálásához <code>(evocontest.Submission.Runner)</code></li>
        <li>és teszteléséhez <code>(evocontest.Submission.Test)</code></li>
    </ul>
    szükséges projekteket. A letöltéshez válaszd ki a jobboldali linkek valamelyikét!
</p>

<h2>Jelentkezés</h2>
<p>
    Itt kell feltöltened a megoldásodat, ami:
    <ul>
        <li>Az <code>evocontest.Submission.dll</code> szerelvény <code>Release - Any CPU</code> módban buildelve.</li>
        <li>Egyetlen <code>evocontest.Common.ISolution</code> interfészt implementáló osztályt tartalmaz.</li>
        <li>Az <code>evocontest.Common</code> projekt és a .NET Core 3.0 keretrendszeren kívül nincs más függősége.</li>
    </ul>
</p>
<p>
    Feltöltés után a megoldásod automatikus ellenőrzéseken esik át.
    Sikeres ellenőrzés után a megoldásod aktív lesz, és részt fog venni a napi megmérettetéseken.
    A nevezési időszak alatt a megoldásodat teszőleges alkalommal lecserélheted. A döntőben az utolsó feltöltött megoldás vesz részt.
</p>
<script>
    @{
        var now = DateTime.Now;
        var targetDate = new DateTime(now.Year, now.Month, now.Day, 10, 0, 0);
        if (DateTime.Now >= targetDate)
        {
            targetDate = targetDate.AddDays(1);
        }
        var targetDateStr = targetDate.ToString("yyyy-MM-ddTHH:mm:ss");
    }
    // Set the date we're counting down to
    var countDownDate = new Date("@Html.Raw(targetDateStr)").getTime();

    // Update the count down every 1 second
    var x = setInterval(function () {

        // Get today's date and time
        var now = new Date().getTime();

        // Find the distance between now and the count down date
        var distance = countDownDate - now;

        // Time calculations for days, hours, minutes and seconds
        var days = Math.floor(distance / (1000 * 60 * 60 * 24));
        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);

        // Display the result in the element with id="demo"
        document.getElementById("countdown").innerHTML = ""
            + hours + ":"
            + minutes + ":"
            + seconds + "";

        // If the count down is finished, set next day
        if (distance < 0) {
            countDownDate = new Date(countDownDate).setDate(new Date(countDownDate).getDate() + 1);
        }
    }, 1000);
</script>
